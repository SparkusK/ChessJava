
/*
 * ChessController.java
 *
 * Created on 27 Nov 2011, 2:34:50 PM
 * @author Shane Kelly
 */

package ChessPackage;


import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;
import org.netbeans.lib.awtextra.AbsoluteConstraints;
import org.netbeans.lib.awtextra.AbsoluteLayout;

/**
 *
 * @author Shane Kelly
 */
public class ChessController extends javax.swing.JFrame {

    /** Creates new form ChessController */
    public ChessController() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chessCanvas1 = new ChessCanvas();
        jPanel1 = new JPanel();
        jLabel1 = new JLabel();
        jLabel2 = new JLabel();
        jLabel3 = new JLabel();
        jLabel4 = new JLabel();
        jLabel5 = new JLabel();
        jLabel6 = new JLabel();
        jLabel7 = new JLabel();
        jLabel8 = new JLabel();
        jPanel2 = new JPanel();
        jLabel9 = new JLabel();
        jLabel10 = new JLabel();
        jLabel11 = new JLabel();
        jLabel12 = new JLabel();
        jLabel13 = new JLabel();
        jLabel14 = new JLabel();
        jLabel15 = new JLabel();
        jLabel16 = new JLabel();
        currentMovePlayerLabel = new JLabel();
        descriptionLabel = new JLabel();
        whiteInCheckLabel = new JLabel();
        blackInCheckLabel = new JLabel();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("Play Chess!");
        setBackground(new Color(153, 255, 153));
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        setMinimumSize(new Dimension(480, 480));
        setResizable(false);
        addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        getContentPane().setLayout(new AbsoluteLayout());

        chessCanvas1.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                chessCanvas1MouseClicked(evt);
            }
            public void mousePressed(MouseEvent evt) {
                chessCanvas1MousePressed(evt);
            }
            public void mouseReleased(MouseEvent evt) {
                chessCanvas1MouseReleased(evt);
            }
        });
        chessCanvas1.addMouseMotionListener(new MouseMotionAdapter() {
            public void mouseDragged(MouseEvent evt) {
                chessCanvas1MouseDragged(evt);
            }
        });
        getContentPane().add(chessCanvas1, new AbsoluteConstraints(10, 0, 710, 640));

        jPanel1.setLayout(new GridLayout(8, 1));

        jLabel1.setText("1");
        jPanel1.add(jLabel1);

        jLabel2.setText("2");
        jPanel1.add(jLabel2);

        jLabel3.setText("3");
        jPanel1.add(jLabel3);

        jLabel4.setText("4");
        jPanel1.add(jLabel4);

        jLabel5.setText("5");
        jPanel1.add(jLabel5);

        jLabel6.setText("6");
        jPanel1.add(jLabel6);

        jLabel7.setText("7");
        jPanel1.add(jLabel7);

        jLabel8.setText("8");
        jPanel1.add(jLabel8);

        getContentPane().add(jPanel1, new AbsoluteConstraints(0, 0, -1, 645));

        jPanel2.setLayout(new GridLayout(1, 8));

        jLabel9.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel9.setText("A");
        jPanel2.add(jLabel9);

        jLabel10.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel10.setText("B");
        jPanel2.add(jLabel10);

        jLabel11.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel11.setText("C");
        jPanel2.add(jLabel11);

        jLabel12.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel12.setText("D");
        jPanel2.add(jLabel12);

        jLabel13.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel13.setText("E");
        jPanel2.add(jLabel13);

        jLabel14.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel14.setText("F");
        jPanel2.add(jLabel14);

        jLabel15.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel15.setText("G");
        jPanel2.add(jLabel15);

        jLabel16.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel16.setText("H");
        jPanel2.add(jLabel16);

        getContentPane().add(jPanel2, new AbsoluteConstraints(13, 645, 700, -1));

        currentMovePlayerLabel.setText("WHITE");
        getContentPane().add(currentMovePlayerLabel, new AbsoluteConstraints(500, 670, -1, -1));

        descriptionLabel.setText("to move.");
        getContentPane().add(descriptionLabel, new AbsoluteConstraints(550, 670, -1, -1));

        whiteInCheckLabel.setText("White is not in check.");
        getContentPane().add(whiteInCheckLabel, new AbsoluteConstraints(20, 670, -1, -1));

        blackInCheckLabel.setText("Black is not in check.");
        getContentPane().add(blackInCheckLabel, new AbsoluteConstraints(240, 670, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Does nothing.
     * @param evt The nothing to do nothing with so that nothing is achieved.
     */
    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed

    }//GEN-LAST:event_formMousePressed

    /**
     * Passes the mouse event to the ChessCanvas object to do the input with.
     * Also sets informative label values appropriately.
     * @param evt the mouse event to pass to the ChessCanvas object.
     */
    private void chessCanvas1MousePressed(MouseEvent evt) {//GEN-FIRST:event_chessCanvas1MousePressed

        chessCanvas1.mousePressed(evt);



        // ----- Set the labels appropriately... ------ //
        currentMovePlayerLabel.setText(chessCanvas1.getBoard().getCurrentMovePlayer().toString());
        if (chessCanvas1.getBoard().kingUnderAttack(Board.Color.WHITE, chessCanvas1.getBoard().getKingPosition(Board.Color.WHITE))) {
            whiteInCheckLabel.setText("White is in check!");
        }
        else {
            whiteInCheckLabel.setText("White is NOT in check.");
        }
        if (chessCanvas1.getBoard().kingUnderAttack(Board.Color.BLACK, chessCanvas1.getBoard().getKingPosition(Board.Color.BLACK))) {
            blackInCheckLabel.setText("Black is in check!");
        }
        else {
            blackInCheckLabel.setText("Black is NOT in check.");
        }
        // ----------------------------- //
    }//GEN-LAST:event_chessCanvas1MousePressed

    private void chessCanvas1MouseReleased(MouseEvent evt) {//GEN-FIRST:event_chessCanvas1MouseReleased

        chessCanvas1.mouseReleased(evt);
    }//GEN-LAST:event_chessCanvas1MouseReleased

    private void chessCanvas1MouseDragged(MouseEvent evt) {//GEN-FIRST:event_chessCanvas1MouseDragged

        chessCanvas1.mouseDragged(evt);
    }//GEN-LAST:event_chessCanvas1MouseDragged

    private void chessCanvas1MouseClicked(MouseEvent evt) {//GEN-FIRST:event_chessCanvas1MouseClicked

    }//GEN-LAST:event_chessCanvas1MouseClicked

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChessController().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel blackInCheckLabel;
    private ChessCanvas chessCanvas1;
    private JLabel currentMovePlayerLabel;
    private JLabel descriptionLabel;
    private JLabel jLabel1;
    private JLabel jLabel10;
    private JLabel jLabel11;
    private JLabel jLabel12;
    private JLabel jLabel13;
    private JLabel jLabel14;
    private JLabel jLabel15;
    private JLabel jLabel16;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JLabel jLabel8;
    private JLabel jLabel9;
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JLabel whiteInCheckLabel;
    // End of variables declaration//GEN-END:variables

}
